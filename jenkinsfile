pipeline {
    agent { 
        node {
            label 'Node1'
        }
    }
    parameters{
        choice(name: 'ACTION', choices:['deploy', 'delete','adhoc'])
        string(name: 'ADHOC_COMMAND', defaultValue: '' , description: 'Enter adhoc command: ')
    }
    stages {
        stage('Deploy to kubernetes cluster') {
            when {
                expression { return params.ACTION == 'deploy'}
            }
            steps {
                script{
                        echo 'Deploying.......'
                        ansiblePlaybook (
                            // credentialsId: 'a86a4b63-4410-45e8-b78e-225a9ca0a811',
                            // disableHostKeyChecking: true,
                            installation: 'Ansible',
                            inventory: 'Ansible/inventory.k8s.yml',
                            playbook: 'Ansible/deploy_playbook.yml',
                            colorized: true
                        )
                }
            }
        }
        stage('Delete Deployment'){
            when {
                expression { return params.ACTION == 'delete' }
            }
            steps{
                script{
                    echo 'Deleting.......'
                    ansiblePlaybook(
                            installation: 'Ansible',
                            inventory: 'Ansible/inventory.k8s.yml',
                            playbook: 'Ansible/deploy_playbook.yml',
                            colorized: true
                    )
                }
            }
        }
        stage('Run adhoc command'){
            when{
                expression { return params.ACTION == 'adhoc'}
            }
            step{
                script{
                    if (params.ADHOC_COMMAND){
                        echo 'running adhoc command ${params.ADHOC_COMMAND}'
                        sh """
                            ansible-playbook -i Ansible/inventory.k8s.yml -e "adhoc_command=${params.ADHOC_COMMAND}" -e "action=adhoc" Ansible/
                        """
                    }
                    else{
                        error "Invalid ansible adhoc command !!!!!!"
                    }
                }
            }
        }
    }
}