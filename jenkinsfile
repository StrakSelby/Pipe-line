pipeline {
    agent { 
        node {
            label 'Node1'
        }
    }
    environment {
        IMAGE_NAME = 'webserver'
        KUBE_DEPLOYMENT = 'nginx-deployment'
        KUBE_NAMESPACE = 'default'
    }
    stages {
        stage('Install Docker') {
            steps {
                echo "Installing Docker..."
                script {
                    sh '''
                    sudo apt-get update
                    sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common
                    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
                    echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list
                    sudo apt-get update
                    sudo apt-get install -y docker-ce
                    '''
                }
            }
        }
        stage('Install kubectl') {
            steps {
                echo "Installing kubectl..."
                script {
                    sh '''
                    curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
                    chmod +x ./kubectl
                    sudo mv ./kubectl /usr/local/bin/kubectl
                    '''
                }
            }
        }
        stage('Build Docker Image') {
            steps {
                echo "Building Docker image..."
                script {
                    sh '''
                    cd docker/nginx/
                    docker build -t $IMAGE_NAME .
                    '''
                }
            }
        }
        stage('Setting up Digital Ocean Cluster') {
            steps {
                echo "Setting up Digital Ocean cluster..."
                script {
                    sh '''
                    export KUBECONFIG=/home/cluster-kubeconfig.yaml
                    kubectl config current-context
                    kubectl --kubeconfig=/home/cluster-kubeconfig.yaml get nodes
                    '''
                }
            }
        }
        stage('Deploy to Kubernetes') {
            steps {
                echo 'Deploying to Kubernetes...'
                script {
                    sh '''
                    kubectl --kubeconfig=/home/cluster-kubeconfig.yaml apply -f kubernetes/volume/nginx-configmap.yml
                    kubectl --kubeconfig=/home/cluster-kubeconfig.yaml apply -f kubernetes/volume/ngin-deployment.yml
                    '''
                }
            }
        }
    }
}
